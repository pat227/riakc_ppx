open Serializables
open Protobuf_capables
(*These use cache.ml, using Protobuf_capables; all are wrapped in a version struct, all encoded with pb.*)
module BytesCache =      Cache.Make(Bytes)(Bytes)
module BytesBoolCache =  Cache.Make(Bytes)(Bool)
module BytesIntCache =   Cache.Make(Bytes)(Int)
module IntBytesCache =   Cache.Make(Int)(Bytes)
module IntBoolCache =    Cache.Make(Int)(Bool)
module StringCache =     Cache.Make(String)(String)
module StringBoolCache = Cache.Make(String)(Bool)
module StringIntCache =  Cache.Make(String)(Int)
(*======These use alternative implementation utilizng a class to re-use code. These are
  not wrapped in a version struct but are pb encoded.======*)
module Bytes_class_cache =     Cache_classes.Make(Bytes_pb_capable)(Bytes_pb_capable)
module BytesBool_class_cache = Cache_classes.Make(Bytes_pb_capable)(Bool_pb_capable)
module BytesInt_class_cache =  Cache_classes.Make(Bytes_pb_capable)(Int_pb_capable)
module IntBytes_class_cache =  Cache_classes.Make(Int_pb_capable)(Bytes_pb_capable)
module IntBool_class_cache =   Cache_classes.Make(Int_pb_capable)(Bool_pb_capable)
module String_class_cache =    Cache_classes.Make(String_pb_capable)(String_pb_capable)
(*-----This one uses a raw unversioned string for a key.------*)
module String_rawkey_class_cache = Cache_classes.Make(String_raw)(String_pb_capable)
(*-----This one uses a raw unversioned string for key and value------*)
module String_rawkey_rawvalue_class_cache = Cache_classes.Make(String_raw)(String_raw)
module StringBool_class_cache =    Cache_classes.Make(String_pb_capable)(Bool_pb_capable)
module StringInt_class_cache =     Cache_classes.Make(String_pb_capable)(Int_pb_capable)
(*======These use alternative implementation utilizng the same class as above, re-using code. These ARE 
  wrapped in a version struct.======*)
module Bytes_class_versioned_cache =     Cache_classes.Make(Bytes_pb_capable_versioned)(Bytes_pb_capable_versioned)
module BytesBool_class_versioned_cache = Cache_classes.Make(Bytes_pb_capable_versioned)(Bool_pb_capable_versioned)
module BytesInt_class_versioned_cache =  Cache_classes.Make(Bytes_pb_capable_versioned)(Int_pb_capable_versioned)
module IntBytes_class_versioned_cache =  Cache_classes.Make(Int_pb_capable_versioned)(Bytes_pb_capable_versioned)
module IntBool_class_versioned_cache =   Cache_classes.Make(Int_pb_capable_versioned)(Bool_pb_capable_versioned)
(*------Raw String key with pb encoded and versioned string value-----*)
module String_rawkey_versioned_pbvalue_class_cache =        Cache_classes.Make(String_raw)(String_pb_capable_versioned)
module String_class_versioned_cache =     Cache_classes.Make(String_pb_capable_versioned)(String_pb_capable_versioned)
module StringBool_class_versioned_cache = Cache_classes.Make(String_pb_capable_versioned)(Bool_pb_capable_versioned)
module StringInt_class_versioned_cache =  Cache_classes.Make(String_pb_capable_versioned)(Int_pb_capable_versioned)
(*===JSON repetition of above===*)
module Bytes_jsonclass =               Cache_classes.Make(Bytes_json_capable)(Bytes_json_capable)
module Bytes_jsonclass_versioned =     Cache_classes.Make(Bytes_json_capable_versioned)(Bytes_json_capable_versioned)
module BytesBool_jsonclass =           Cache_classes.Make(Bytes_json_capable)(Bool_json_capable)
module BytesBool_jsonclass_versioned = Cache_classes.Make(Bytes_json_capable_versioned)(Bool_json_capable_versioned)
module BytesInt_jsonclass =            Cache_classes.Make(Bytes_json_capable)(Int_json_capable)
module BytesInt_jsonclass_versioned =  Cache_classes.Make(Bytes_json_capable_versioned)(Int_json_capable_versioned)
module IntBytes_jsonclass =            Cache_classes.Make(Int_json_capable)(Bytes_json_capable)
module IntBytes_jsonclass_versioned =  Cache_classes.Make(Int_json_capable_versioned)(Bytes_json_capable_versioned)
module IntBool_jsonclass =             Cache_classes.Make(Int_json_capable)(Bool_json_capable)
module IntBool_jsonclass_versioned =   Cache_classes.Make(Int_json_capable_versioned)(Bool_json_capable_versioned)
(*The raw string key with json encoded value*)
module String_rawkey_jsonclass =            Cache_classes.Make(String_raw)(String_json_capable)
module String_jsonclass =                   Cache_classes.Make(String_json_capable)(String_json_capable)
module String_jsonclass_versioned =         Cache_classes.Make(String_json_capable_versioned)(String_json_capable_versioned)
(*The raw string key with json encoded and vesioned value*)
module String_rawkey_jsonclass_versioned =  Cache_classes.Make(String_raw)(String_json_capable_versioned)
module StringBool_jsonclass =               Cache_classes.Make(String_json_capable)(Bool_json_capable)
module StringBool_jsonclass_versioned =     Cache_classes.Make(String_json_capable_versioned)(Bool_json_capable_versioned)
module StringIntCache_jsonclass =           Cache_classes.Make(String_json_capable)(Int_json_capable)
module StringIntCache_jsonclass_versioned = Cache_classes.Make(String_json_capable_versioned)(Int_json_capable_versioned)
